program Errors
{
declarations

    a = 4, a = 5, b = true -> integer;
	d = true, flag = 5   -> boolean;
	array1 = [[1,2],[2,3,4,5]], vector -> array size 4,3;
	vector -> array size 4,3;
 	seq1 =<<1,2,3,4>> -> sequence;
    seq1 = <<1,4,7>> -> sequence;
    seq2 = <<5,4,7>> -> sequence;
    set1 = {} -> set;
    set2 -> set;
    b -> integer;
    set12 = { x | {x | x+10 < x-4}} -> set;
    x -> integer;
    set4 = { y | y+1 < y+4} -> set;
    set5 = { y | y+1+array1[y,20] < y+4} -> set;
    set6 = { z | (z+tail(z)) < 5} -> set;
    set7 = { z | (z+head(tail(z))) < 5} -> set;
    set3 = { x | ((x+1<2) && (x>-5000)) || (x>1000) } -> set;
    set8 = { z | (z+head(tail(cons(x,z)))) < 5} -> set;
    set9 = { z | !z} -> set;
    set10 = { z | x+array1[[1,2,3],[2],[3],[1,3,4]]} -> set; //é possivel fazer isto !
    set11 = { z | v+<<1,2,3,4>>} -> set;
    set11 = { z | v+<<1,2,3,4>>} -> set;
    f -> boolean;
    u -> integer;
    /*subprogram f(amen->boolean)->integer{
        declarations
            b->integer;
            b->boolean;
            d->boolean;
            d->integer;
            vector -> array size 4,3;
            vector -> array size 4,3;
            seq2 = <<5,4,7>> -> sequence;
            seq2 = <<5,4,7>> -> sequence;
            set11 = { z | v+<<1,2,3,4>>} -> set;
            set11 = { z | v+<<1,2,3,4>>} -> set;
            subprogram c(a->integer)->integer{
                declarations
                    b-> integer;
                    b-> integer;
                    d->integer;
                    vector -> integer;
                    novo -> sequence;
                statements
                    b = 5;
                return b;
            }

        statements
            b = 4;
        return b;
    }*/


statements

    d = 2+4 in set4;

    //d = 2+4 in { y | y+1+a < y+4};

    //d = 2+4 in (set4 ++ set2);

    //d = 2+4 in set4 ** set2 ++ set5;

    //d = 2+4 in set4 ++ set2 ++ set5 ++ { y | y+1 < y+4};

    //d = 2+4 in (2+5 in set2);

	// here we can't make "8/d", because "d" is boolean type
    b = 6 + 8 && 5 + 8/d + li;

    b = 6 + 8 && d;

	c = 2*5-seq1 < 2*3+flag;
    //c = 2*5-seq1 <> 2*3+flag; //voir comment résoudre ce problème '<>'

	// "array1" it's a vector bi-dimensional,
        // so we can't only give one index
	a = array1[1];

	array1 = vector;

    d = (1 > 2) && (3 == 4);

    b = 2+5;

    flag = a in set1;

    array1[1,1,1] = 2*4;

	// we can't give a boolean type to result of
	// indexing array1
	d = array1[seq1,x,0];

	a = [2];

	// must flag an error because final tail will be empty
 	a = head(tail(tail(tail(tail(f)))));

 	a = head(seq1);

    a = cons(flag,seq1);

    d = 2 * u * 6 / true;

    d = 2 * d && 6 / true;

    d =  2 * 4 * false;

    d = isMember(a-3*b+array1[2,2],seq1);

    a = 2 + true + c;

    //d = 3 in woot;
}
