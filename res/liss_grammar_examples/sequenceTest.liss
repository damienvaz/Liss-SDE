program sequenceTest{
    declarations
        seq1, seq2=<<>>, seq3=<<1,2>> -> sequence;
        i -> integer;
        t -> boolean;
        subprogram calculate(seq3->sequence)->integer{
            declarations
                seq4=<<4>>, seq5=<<>> -> sequence;
                i = 4 -> integer;
                t -> boolean;
            statements
                //seq4 = cons(5,seq4);
                //seq4 = del(4,seq4);
                //seq5 = tail(seq4);
                i = i + 3 + head(seq4); //correct
                t = isEmpty(seq5);      //correct
                //i = length(seq4);
                //t = isMember(2+3,seq4);
                //copy(seq2,seq5);
                //cat(seq1,seq4);
            return i;
        }
        /*subprogram calculate(seq3 -> integer)->integer{
            declarations
                i = 4 -> integer;
            statements

            return i;
        }*/
    statements
        i = 4; //correct

        i = head(seq3);      //correct
        i = 1+head(seq3);    //correct
        i = 1+2+head(seq3);  //correct

        seq2 = tail(seq3);   //correct

        t = isEmpty(seq3);   //correct
        t = false == isEmpty(seq3); //correct

        i = length(seq3);       //correct
        i = 1 + length(seq3);   //correct

        t = isMember(2,seq3);                      //correct
        t = isMember(2+3+4,seq3);                  //correct
        t = isMember(2+3+length(seq3),seq3);       //correct
        t = isMember(2+3+5+length(tail(seq3))+head(seq3)+calculate(seq3),seq3);  //correct
        i = calculate(seq3); //correct
        i = calculate(seq3)+calculate(seq2); //correct

        writeln(seq3);

        seq2 = tail(seq3);       //correct

        writeln(seq2);

        //seq3 = cons(3,seq3);
        //seq3 = del(2,seq3);
        t = isEmpty(seq1);       //correct
        i = length(seq3);        //correct
        t = isMember(3,seq3);    //correct

        i = 2+head(seq3);                      //correct
        i = 1+length(tail(seq3));              //correct
        //t = false == isEmpty(cons(3,seq3));
        //seq3 = cons(2,del(2,seq3));
        t = true == isMember(3,seq3);          //correct

        //i = 3 + 6 + head(cons(2+3,seq3));

        seq3 = cons(5,seq3);                    //correct
        seq3 = cons(5+4+calculate(seq3),seq3);  //correct
        seq3 = cons(4,cons(7,cons(10,seq3)));   //correct




        seq3 = cons(4+10,cons(7+20,cons(10+40,seq3)));                                            //correct
        seq3 = cons(4+10+length(seq3),cons(7+20,cons(10+40,seq3)));                               //correct

        seq3 = cons(4+10+length(cons(3,seq3)),cons(7+20,cons(10+40,seq3)));                       //correct


        seq3 = cons(4+10+calculate(seq3)+length(seq3),cons(7+20,cons(10+40,seq3)));               //correct

        seq3 = del(2+3+length(seq3),cons(2,seq3));                                                //correct

        seq3 = del(2,del(4,del(5,cons(2,cons(4+length(seq3)+calculate(seq3),cons(5,seq3))))));    //correct

        writeln(seq3);

        seq2 = cons(5, seq2);

        write(seq2);

        write(seq1);

        writeln(seq3);

        /*i = 3+4+head(seq3)+head(del(1+4,cons(3,seq3))); // i = 7 + 1 + 1 <=> i = 9 working correctly
        //seq3 = cons(5,cons(3,seq3));

        seq3 = del(2,seq3); //working correctly
        //seq2 = tail(seq3);
        //i = head(seq3);

        //t = true == isEmpty(seq3); //t == 0
        //t = isEmpty(seq3) == false;

        //i = 6 + 7 + length(cons(8+7,seq3)); // i =13 + 3 <=> i = 16 working correctly
        //t = true == isMember(3+4,seq3); // t = 1 == 0 <=> t = 0 working correctly but need to check isMember with a value in the sequence

        //t = true == isMember(3+4+calculate(seq3),seq3);
        //i = 3 + 4 + length(cons(calculate(seq3),cons(7,seq3))); //i = 7 +
        //i = 3 + 4 + length(cons(1,seq3)); //

        //copy(seq3,seq1);
        //cat(seq2,seq3);
        //i = 2 + 4 + calculate(seq3);*/
}
